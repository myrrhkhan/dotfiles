!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}({0:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateTeamNumber=t.validateProject=void 0,t.validateProject=function(){const e=document.getElementById("projectName"),t=e.value.match(/\w[\w-]*$/gm),n=document.getElementById("projectnamediv");return null===t||0===t.length?(n.innerText=window.i18nTrans("ui","Invalid project name"),n.classList.add("error"),e.classList.add("error"),!1):(n.innerText=window.i18nTrans("ui","Project Name"),n.classList.remove("error"),e.classList.remove("error"),!0)},t.validateTeamNumber=function(){const e=document.getElementById("teamNumber"),t=e.value.match(/^\d{1,5}$/gm),n=document.getElementById("teamnumberdiv");return null===t||0===t.length?(n.innerText=window.i18nTrans("ui","Invalid team number"),n.classList.add("error"),e.classList.add("error"),!1):(n.innerText=window.i18nTrans("ui","Team Number"),n.classList.remove("error"),e.classList.remove("error"),!0)}},10:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectType=void 0,function(e){e[e.Example=0]="Example",e[e.Template=1]="Template"}(t.ProjectType||(t.ProjectType={}))},9:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(10),o=n(0),a=acquireVsCodeApi();let c=r.ProjectType.Template,d="",l="";function u(){document.activeElement.blur(),a.postMessage({type:"projecttype"})}function i(){document.activeElement.blur(),a.postMessage({data:{base:"",desktop:!1,language:d,newFolder:!1,projectName:"",projectType:c,teamNumber:"",toFolder:""},type:"language"})}function m(){document.activeElement.blur(),a.postMessage({data:{base:"",desktop:!1,language:d,newFolder:!1,projectName:"",projectType:c,teamNumber:"",toFolder:""},type:"base"})}function s(){document.activeElement.blur(),a.postMessage({type:"newproject"})}function p(){const e=o.validateTeamNumber(),t=o.validateProject();e&&t&&(document.activeElement.blur(),a.postMessage({data:{base:l,desktop:document.getElementById("desktopCB").checked,language:d,newFolder:document.getElementById("newFolderCB").checked,projectName:document.getElementById("projectName").value,projectType:c,teamNumber:document.getElementById("teamNumber").value,toFolder:document.getElementById("projectFolder").value},type:"createproject"}))}window.addEventListener("message",e=>{const t=e.data,n=document.getElementById("projectType"),o=document.getElementById("language"),a=document.getElementById("projectBase");switch(t.type){case"newproject":document.getElementById("projectFolder").value=t.data;break;case"projecttype":c=t.data,n.innerText=r.ProjectType[c].toLowerCase(),o.disabled=!1,o.innerText=window.i18nTrans("projectcreator","Select a language"),a.style.visibility="initial",a.disabled=!0,a.innerText=window.i18nTrans("projectcreator","Select a project base"),i();break;case"language":d=t.data,o.innerText=d,a.disabled=!1,a.innerText=window.i18nTrans("projectcreator","Select a project base"),m();break;case"base":l=t.data,a.innerText=l}}),window.addEventListener("load",e=>{document.getElementById("projectType").onclick=u,document.getElementById("language").onclick=i,document.getElementById("projectBase").onclick=m,document.getElementById("projectSelectButton").onclick=s,document.getElementById("projectName").oninput=o.validateProject,document.getElementById("teamNumber").oninput=o.validateTeamNumber,document.getElementById("generateProject").onclick=p})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,