!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=6)}({6:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(7),o={};let a;function u(e,t,...n){let a;if(u=t,"[object String]"===toString.call(u))a=t;else{if(2!==t.length)throw new Error("Invalid message");a=t[0],t=t[1]}var u;return o[e]&&o[e][a]&&(t=o[e][a]),r.default(t,n)}window.addEventListener("load",()=>{document.querySelectorAll("[data-locale]").forEach(e=>{const t=e.attributes.getNamedItem("data-domain");if(!t)return void console.log("failed to process ",e);const n=t.value;e.attributes.getNamedItem("data-default-domain")&&(a=n),o[n]=JSON.parse(e.innerHTML)}),document.querySelectorAll("[data-i18n-trans]").forEach(e=>{const t=e.attributes.getNamedItem("data-i18n-trans"),n=e.attributes.getNamedItem("data-i18n-key");if(!t||!e.textContent)return;let r=e.textContent;n&&""!==n.value&&(r=[n.value,r]);const o=""===t.value?a:t.value;e.textContent=u(o,r)})}),window.i18nTrans=u,window.__I18N_LOCALE_DOMAINS=o},7:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){let n;return n=0===t.length?e:e.replace(/\{(\d+)\}/g,(e,n)=>{const r=n[0],o=t[r];let a=e;return"string"==typeof o?a=o:"number"!=typeof o&&"boolean"!=typeof o&&null!=o||(a=String(o)),a}),n}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,